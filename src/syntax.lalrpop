use std::str::FromStr;
use crate::ast::{Expr, Factor, Term, Opr};

grammar;

pub Expr: Expr = {
    <l:Expr> "+" <r:Factor> => Expr::Expr {left: Box::new(l), right: r, opr: Opr::Add},
    <l:Expr> "-" <r:Factor> => Expr::Expr {left: Box::new(l), right: r, opr: Opr::Sub},
    Factor => Expr::Factor(<>),
};

Factor: Factor = {
    <l:Factor> "*" <r:Term> => Factor::Factor {left: Box::new(l), right: r, opr: Opr::Multi},
    <l:Factor> "/" <r:Term> => Factor::Factor {left: Box::new(l), right: r, opr: Opr::Div},
    Term => Factor::Term(<>),
};

Term: Term = {
    Num => Term::Num(<>),
    "(" <Expr> ")" => Term::Expr(Box::new(<>)),
};

Num: i32 = {
    r"[0-9]+" => i32::from_str(<>).unwrap(),
};